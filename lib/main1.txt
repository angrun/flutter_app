import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.red,
      ),
      home: MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  List<String> dogImages = new List();


  @override
  void initState() {
    print("HEI");
    super.initState();
    fetchFive();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),
      body: ListView.builder(
        itemCount: dogImages.length,
        itemBuilder: (BuildContext context, int index) {
          return Container(
            margin: const EdgeInsets.only(bottom: 5.0),
            child: Image.network(dogImages[index], fit: BoxFit.fitWidth),
          );
        },
      ),
    );
  }

  fetch() async {
    final response = await http.get(
        "https://www.flickr.com/services/rest/?method=flickr.photos.search&tags=cat&per_page=50&api_key=e4774ca74391030bec9bfac5e014f5d7&format=json&nojsoncallback=1");

    if (response.statusCode == 200) {
      setState(() {
        print("HERE");
        var photos = json.decode(response.body)['photos']['photo'];
        for (var photo in photos) {
          print(photo);
          dogImages.add(
              "https://farm${photo['farm']}.staticflickr.com/${photo['server']}/${photo['id']}_${photo['secret']}_m.jpg");
        }
      });
    } else {
      throw Exception("Failed to load images!");
    }
  }

  fetchFive() {
    for (int i = 0; i < 5; i++) {
      fetch();
    }
  }
}
// Center is a layout widget. It takes a single child and positions it
// in the middle of the parent.
